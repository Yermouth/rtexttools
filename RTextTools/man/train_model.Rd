\name{train_model}
\alias{train_model}
%- Also NEED an '\alias' for EACH other topic documented here.
\title{
makes a model object using the specified algorithm.
}
\description{
Creates a trained model using the specified algorithm.
}
\usage{
train_model(corpus, algorithm=c("SVM","SLDA","BOOSTING","BAGGING",
"RF","GLMNET","TREE","NNET","MAXENT"), method = "C-classification", 
cross = 0, cost = 100, kernel = "radial", maxitboost = 100, 
maxitglm = 500, size = 1, maxitnnet = 1000, MaxNWts = 10000, 
rang = 0.1, decay = 5e-04, trace=FALSE, ntree = 200, 
feature_cutoff = 0, gaussian_prior = 0, inequality_constraints = 0,
...)
}
%- maybe also 'usage' for other objects documented here.
\arguments{
  \item{corpus}{
Class of type matrix_container generated by the create_corpus() function.
}
  \item{algorithm}{
Character vector (i.e. a string) specifying which algorithm to use. Use print_algorithms() to see a list of options. 
}
  \item{method}{
Method parameter for SVM implentation. See e1071 documentation for more details.
}
  \item{cross}{
Cross parameter for SVM implentation. See e1071 documentation for more details.
}
  \item{cost}{
Cost parameter for SVM implentation. See e1071 documentation for more details.
}
  \item{kernel}{
Kernel parameter for SVM implentation. See e1071 documentation for more details.
}
  \item{maxitboost}{
Maximum iterations parameter for boosting implentation. See caTools documentation for more details.
}
  \item{maxitglm}{
Maximum iterations parameter for glmnet implentation. See glmnet documentation for more details.
}
  \item{size}{
Size parameter for neural networks implentation. See nnet documentation for more details.
}
  \item{maxitnnet}{
Maximum iterations for neural networks implentation. See nnet documentation for more details.
}
  \item{MaxNWts}{
Maximum number of weights parameter for neural networks implentation. See nnet documentation for more details.
}
  \item{rang}{
Range parameter for neural networks implentation. See nnet documentation for more details.
}
  \item{decay}{
Decay parameter for neural networks implentation. See nnet documentation for more details.
}
  \item{trace}{
Trace parameter for neural networks implentation. See nnet documentation for more details.
}
  \item{ntree}{
Number of trees parameter for RandomForests implentation. See randomForest documentation for more details.
}
  \item{feature_cutoff}{
Feature cutoff parameter for maximum entropy implementation.
}
  \item{gaussian_prior}{
Guassian prior parameter for maximum entropy implementation.
}
  \item{inequality_constraints}{
Inequality constraints parameter for maximum entropy implementation.
}
  \item{\dots}{
Additional arguments to be passed on to algorithm function calls.
}
}
\details{
Only one algorithm may be selected for training. See train_models() and classify_models() to train and classify using multiple algorithms.
}
\value{
%%  ~Describe the value returned
%%  If it is a LIST, use
%%  \item{comp1 }{Description of 'comp1'}
%%  \item{comp2 }{Description of 'comp2'}
%% ...
}
\references{
%% ~put references to the literature/web site here ~
}
\author{
Timothy P. Jurka <tpjurka@ucdavis.edu>, Loren Collingwood <lorenc2@uw.edu>
}
\note{
%%  ~~further notes~~
}

%% ~Make other sections like Warning with \section{Warning }{....} ~

\seealso{
%% ~~objects to See Also as \code{\link{help}}, ~~~
}
\examples{
library(RTextTools)
data <- read_data(system.file("data/NYTimes.csv.gz",package="RTextTools"),type="csv")
data <- data[sample(1:3100,size=1000,replace=FALSE),]
matrix <- create_matrix(cbind(data$Title,data$Subject), language="english", 
removeNumbers=TRUE, stemWords=FALSE, weighting=weightTfIdf)
corpus <- create_corpus(matrix,data$Topic.Code,trainSize=1:750, testSize=751:1000, 
virgin=FALSE)
glmnet_model <- train_model(corpus,"GLMNET")
maxent_model <- train_model(corpus,"MAXENT")
svm_model <- train_model(corpus,"SVM")
}
% Add one or more standard keywords, see file 'KEYWORDS' in the
% R documentation directory.
\keyword{methods}